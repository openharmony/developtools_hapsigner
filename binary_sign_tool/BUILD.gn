# Copyright (c) 2025-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("cmd/signature_tools_cmd.gni")
import("codesigning/signature_tools_codesigning.gni")
import("common/signature_tools_common.gni")
import("hap/signature_tools_hap.gni")
import("profile/signature_tools_profile.gni")
import("signature_tools.gni")
import("signer/binary_sign_tool_signer.gni")
import("utils/signature_tools_utils.gni")

import("//build/ohos.gni")
ohos_copy("copy_signature_tools_resource") {
  sources = [
    "../dist/OpenHarmony.p12",
    "../dist/OpenHarmonyApplication.pem",
    "../dist/OpenHarmonyProfileDebug.pem",
    "../dist/OpenHarmonyProfileRelease.pem",
    "../dist/SgnedReleaseProfileTemplate.p7b",
    "../dist/UnsgnedDebugProfileTemplate.json",
    "../dist/UnsgnedReleasedProfileTemplate.json",
  ]
  outputs =
      [ "${target_out_dir}/toolchains/hapsigntool_pc/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/toolchains/hapsigntool_pc"
  module_install_name = ""
  part_name = "hapsigner"
  subsystem_name = "developtools"
}

signature_tools_main_include = [
  "${signature_tools_api}/include",
  "//third_party/openssl/include",
  "//third_party/openssl/crypto/pkcs12",
]

signature_tools_main_src = [
  "main.cpp",
  "${signature_tools_api}/src/sign_tool_service_impl.cpp",
]

ohos_executable("binary-sign-tool") {
  signature_tools_main_include += signature_tools_utils_include

  signature_tools_main_include += signature_tools_codesigning_include
  signature_tools_main_include += signature_tools_common_include
  signature_tools_main_include += signature_tools_hap_include
  signature_tools_main_include += signature_tools_profile_include
  signature_tools_main_include += binary_sign_tool_signer_include
  signature_tools_main_include += signature_tools_cmd_include

  # 在 //developtools/signaturetools/services/utils 模块里面定义编译脚本 signature_tools_utils.gni
  signature_tools_main_src += signature_tools_utils_src
  signature_tools_main_src += signature_tools_codesigning_src
  signature_tools_main_src += signature_tools_common_src
  signature_tools_main_src += signature_tools_hap_src
  signature_tools_main_src += signature_tools_profile_src
  signature_tools_main_src += binary_sign_tool_signer_src
  signature_tools_main_src += signature_tools_cmd_src

  include_dirs = signature_tools_main_include
  sources = signature_tools_main_src

  deps = [
  ]

  external_deps = [
    "bounds_checking_function:libsec_static",
    "elfio:elfio",
    "json:nlohmann_json_static",
    "openssl:libcrypto_static",
    "openssl:libssl_static",
  ]

  cflags_cc = [
    "-std=c++17",
    "-fno-rtti",
    "-fstack-protector-strong",
  ]

  cflags = [
    "-fno-rtti",
    "-Wno-c++20-extensions",
  ]

  remove_configs = [ "//build/config:executable_config" ]
  install_images = [ "system" ]
  install_enable = false
  part_name = "hapsigner"
  subsystem_name = "developtools"
}
